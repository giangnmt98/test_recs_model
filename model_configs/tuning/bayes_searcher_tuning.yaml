searcher_cls: bayes_opt.BayesianOptimization
estimated_num_user: 300000
searcher_params:
  init_points: 2
  n_iter: 2
  random_state: 38
data_loader_filter:
  train_filters:
    - filename_date >= 20230129
    - filename_date < 20230423
  validation_filters:
    - filename_date >= 20230423
    - filename_date < 20230430
tuning_params:
  hidden_layers: [[1, 32], [1, 32], [1, 32], [1, 1]]
  activation_function: ['torch.nn.LeakyReLU', 'torch.nn.ReLU', 'torch.nn.Sigmoid']
  num_factors: [16, 256] # apply for all feature
  sparse_features.encoded_user_province.enable: [0, 1]
  sparse_features.encoded_user_package_code.enable: [0, 1]
  sparse_features.encoded_content_parent_type.enable: [0, 1]
  sparse_features.encoded_content_country.enable: [0, 1]
  sparse_features.encoded_content_type.enable: [0, 1]
  sparse_features.hashed_content_category.enable: [0, 1]
  sparse_features.encoded_age_group.enable: [0, 1]
  optimizer.params.lr:  [0.005, 0.02]
  optimizer.cls_name: ['torch.optim.Adam', 'torch.optim.Adagrad']
